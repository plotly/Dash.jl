version: 2.1

orbs:
  percy: percy/agent@0.1.3
  browser-tools: circleci/browser-tools@1.2.4

jobs:

  test:
    working_directory: ~/dashjl
    docker:
      - image: etpinard/dashjl-tests:0.1.0
        auth:
          username: dashautomation
          password: $DASH_PAT_DOCKERHUB
        environment:
          PERCY_PARALLEL_TOTAL: '-1'
          PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: 'True'
    steps:
      - checkout

      - browser-tools/install-browser-tools

      - run:
          name: ℹ️  CI Context
          command: |
            echo "TRIGGERER: ${CIRCLE_USERNAME}"
            echo "BUILD_NUMBER: ${CIRCLE_BUILD_NUM}"
            echo "BUILD_URL: ${CIRCLE_BUILD_URL}"
            echo "BRANCH: ${CIRCLE_BRANCH}"
            echo "RUNNING JOB: ${CIRCLE_JOB}"
            echo "JOB PARALLELISM: ${CIRCLE_NODE_TOTAL}"
            echo "CIRCLE_REPOSITORY_URL: ${CIRCLE_REPOSITORY_URL}"
            echo $CIRCLE_JOB > circlejob.txt

      - run:
          name: 🔎 Unit tests
          command: |
            julia test/ci_prepare.jl

      - run:
          name: ⚙️  Integration tests
          command: |
            python -m venv venv
            . venv/bin/activate
            pip install --upgrade pip wheel
            git clone --depth 1 https://github.com/plotly/dash.git -b dev dash-main
            cd dash-main && pip install -e .[ci,dev,testing] --progress-bar off && cd ..
            export PATH=$PATH:/home/circleci/.local/bin/
            pytest --headless --nopercyfinalize --junitxml=test-reports/dashjl.xml --percy-assets=test/assets/ test/integration/
      - store_artifacts:
          path: test-reports
      - store_test_results:
          path: test-reports
      - store_artifacts:
          path: /tmp/dash_artifacts

      - run:
          name: 🦔 percy finalize
          command: npx percy finalize --all

workflows:
  version: 2
  build:
    jobs:
      - test
